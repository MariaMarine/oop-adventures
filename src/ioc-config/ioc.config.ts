// tslint:disable
import { IMazePrinter } from './../core/UI/interfaces/maze-printer';
import { Container } from 'inversify';
import { Iwriter } from '../core/UI/interfaces/writer';
import { Init } from './../core/init';
import { Ireader } from './../core/UI/interfaces/reader';
import { ConsoleReader } from './../core/UI/readers/console-reader';
import { ConsoleWriter } from './../core/UI/writers/console-writer';
import { PromptLoop } from '../core/UI/promptLoop';
import { MainEngine } from '../core/engine';
import { MazeDashPrinter } from '../core/UI/maze-printer';
import { TYPES } from './types';
import { FileReader } from '../db/service/implementations/file-reader';
import { IdatabaseReader } from '../db/service/interfaces/db-reader';
import { DbService } from '../db/service/db.service';
import { Factory } from '../factory/factory';
import { IDbService } from '../db/service/interfaces/db-service';
import { Ifactory } from '../factory/interface/Ifactory';
import { Battle } from '../core/modes/battle';
import { PlaceGenerator } from '../core/engine-helpers/current-place-generator';
import { IRepository } from '../models/non-living/interfaces/repository';
import { Repository } from '../models/non-living/classes/repository';
import { ItemService } from '../core/engine-helpers/item-service';
import { ShowItems } from '../core/choices/models/actions/show-items';
import { Attack } from '../core/choices/models/actions/attack';
import { Trade } from '../core/choices/models/actions/trade';
import { Loot } from '../core/choices/models/actions/loot';
import { North } from '../core/choices/models/directions/north';
import { South } from '../core/choices/models/directions/south';
import { East } from '../core/choices/models/directions/east';
import { West } from '../core/choices/models/directions/west';
import { ChoiceService } from '../core/choices/choice-service';
import { IChoiceProvider } from '../core/choices/interface/choice-provider';
import { ChoiceProvider } from '../core/choices/choice-provider';
import { Equip } from '../core/choices/models/actions/equip';
import { Hit } from '../core/choices/models/battle-choices/hit';
import { DrinkPotion } from '../core/choices/models/battle-choices/drink-potion';
import { PerformMagic } from '../core/choices/models/battle-choices/perform-magic';
import { Approach } from '../core/choices/models/battle-choices/approach';

const container: Container = new Container();

container.bind<Init>(TYPES.init).to(Init);
container.bind<Iwriter>('ui-writer').to(ConsoleWriter);
container.bind<Ireader>('ui-reader').to(ConsoleReader);
container.bind<PromptLoop>('prompt-loop').to(PromptLoop);
container.bind<MainEngine>('main-engine').to(MainEngine).inSingletonScope();
container.bind<IMazePrinter>('maze-printer').to(MazeDashPrinter);
container.bind<IdatabaseReader>('database-reader').to(FileReader);
container.bind<IDbService>('database-service').to(DbService);
container.bind<Ifactory>('factory').to(Factory);
container.bind<Battle>('battle').to(Battle);
container.bind<PlaceGenerator>('current-place-generator').to(PlaceGenerator);
container.bind<IRepository>('repository').to(Repository).inSingletonScope();
container.bind<ItemService>('item-service').to(ItemService);

container.bind<ChoiceService>('choice-service').to(ChoiceService);
container.bind<IChoiceProvider>('choice-provider').to(ChoiceProvider).inSingletonScope();
container.bind<North>('north').to(North).inSingletonScope();
container.bind<South>('south').to(South).inSingletonScope();
container.bind<East>('east').to(East).inSingletonScope();
container.bind<West>('west').to(West).inSingletonScope();
container.bind<ShowItems>('show-items').to(ShowItems);
container.bind<Attack>('attack').to(Attack);
container.bind<Trade>('trade').to(Trade);
container.bind<Loot>('loot').to(Loot);
container.bind<Equip>('equip').to(Equip);
container.bind<Hit>('hit').to(Hit);
container.bind<DrinkPotion>('drink-potion').to(DrinkPotion);
container.bind<PerformMagic>('perform-magic').to(PerformMagic);
container.bind<Approach>('approach').to(Approach);
export { container };
